{"version":3,"sources":["App.tsx","index.tsx"],"names":["operations","randomTiles","rows","i","push","Array","from","Math","random","App","_useState","useState","_useState2","_slicedToArray","grid","setGrid","_useState3","_useState4","running","setRunning","runningRef","useRef","current","runSimulation","useCallback","gridCopy","JSON","parse","stringify","_loop","_loop2","j","neighbors","forEach","_ref","_ref2","x","y","newI","newJ","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","children","_jsx","style","display","gridTemplateColumns","concat","width","margin","map","col","k","onClick","newGrid","height","backgroundColor","undefined","border","generateEmptyGrid","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a273d1.chunk.js","sourcesContent":["import \"bulma/css/bulma.min.css\";\r\nimport { FC, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst numRows = 50;\r\nconst numCols = 50;\r\n\r\n// Directions: N, S, E, W, NE, NW, SE, SW\r\nconst operations = [\r\n  [0, 1], // right\r\n  [0, -1], // left\r\n  [1, -1], // top left\r\n  [-1, 1], // top right\r\n  [1, 1], // top\r\n  [-1, -1], // bottom\r\n  [1, 0], // bottom right\r\n  [-1, 0], // bottom left\r\n];\r\n\r\nconst generateEmptyGrid = (): number[][] => {\r\n  const rows = [];\r\n  for (let i = 0; i < numRows; i++) {\r\n    rows.push(Array.from(Array(numCols), () => 0));\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst randomTiles = (): number[][] => {\r\n  const rows = [];\r\n  for (let i = 0; i < numRows; i++) {\r\n    rows.push(Array.from(Array(numCols), () => (Math.random() > 0.7 ? 1 : 0)));\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst App: FC = () => {\r\n  const [grid, setGrid] = useState(() => {\r\n    return randomTiles();\r\n  });\r\n\r\n  const [running, setRunning] = useState(false);\r\n  const runningRef = useRef(running);\r\n  runningRef.current = running;\r\n\r\n  const runSimulation = useCallback(() => {\r\n    if (!runningRef.current) {\r\n      return;\r\n    }\r\n\r\n    let gridCopy = JSON.parse(JSON.stringify(grid));\r\n    for (let i = 0; i < numRows; i++) {\r\n      for (let j = 0; j < numCols; j++) {\r\n        let neighbors = 0;\r\n\r\n        operations.forEach(([x, y]) => {\r\n          const newI = i + x;\r\n          const newJ = j + y;\r\n\r\n          if (newI >= 0 && newI < numRows && newJ >= 0 && newJ < numCols) {\r\n            neighbors += grid[newI][newJ];\r\n          }\r\n        });\r\n\r\n        if (neighbors < 2 || neighbors > 3) {\r\n          gridCopy[i][j] = 0;\r\n        } else if (grid[i][j] === 0 && neighbors === 3) {\r\n          gridCopy[i][j] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    setGrid(gridCopy);\r\n  }, [grid]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      runSimulation();\r\n    }, 10);\r\n    return () => clearTimeout(timer);\r\n  }, [running, runSimulation]);\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"container has-text-centered py-5\">\r\n      <h1 className=\"title is-uppercase\">Game of Life</h1>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${numCols}, 20px)`,\r\n          width: \"fit-content\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        {grid.map((rows, i) =>\r\n          rows.map((col, k) => (\r\n            <div\r\n              key={`${i}-${k}`}\r\n              onClick={() => {\r\n                // Deep clone grid\r\n                let newGrid = JSON.parse(JSON.stringify(grid));\r\n                newGrid[i][k] = grid[i][k] ? 0 : 1;\r\n                setGrid(newGrid);\r\n              }}\r\n              style={{\r\n                width: 20,\r\n                height: 20,\r\n                backgroundColor: grid[i][k] ? \"black\" : undefined,\r\n                border: \"1px solid #595959\",\r\n              }}\r\n            ></div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"buttons is-centered pt-5\">\r\n        <button\r\n          className=\"button start-game mx-2\"\r\n          onClick={() => {\r\n            setRunning(true);\r\n            if (running === false) {\r\n              runningRef.current = true;\r\n            }\r\n          }}\r\n        >\r\n          <span>{\"Start\"}</span>\r\n        </button>\r\n\r\n        <button\r\n          className=\"button start-game mx-2\"\r\n          onClick={() => {\r\n            setRunning(false);\r\n            if (running === true) {\r\n              runningRef.current = false;\r\n            }\r\n          }}\r\n        >\r\n          <span>{\"Stop\" }</span>\r\n        </button>\r\n\r\n        <button\r\n          className=\"button mx-2\"\r\n          onClick={() => {\r\n            setGrid(randomTiles());\r\n          }}\r\n        >\r\n          <span>Random</span>\r\n        </button>\r\n\r\n        <button\r\n          className=\"button mx-2\"\r\n          onClick={() => {\r\n            setGrid(generateEmptyGrid());\r\n          }}\r\n        >\r\n          <span>Clear</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"app\")\r\n);\r\n\r\n"],"sourceRoot":""}